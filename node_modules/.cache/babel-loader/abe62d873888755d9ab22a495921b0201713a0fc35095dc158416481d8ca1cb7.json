{"ast":null,"code":"var _jsxFileName = \"D:\\\\Omelete MUI\\\\omelettemui\\\\src\\\\components\\\\header.js\";\nimport { Card, CardContent, Divider, Toolbar, Typography } from \"@mui/material\";\nimport { List, ListItem, ListItemText, ListItemIcon } from \"@mui/material\";\nimport { pink } from \"@mui/material/colors\";\nimport CircleIcon from '@mui/icons-material/Circle'; // Bullet icon\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NumberedListItem = styled(ListItem)(({\n  theme\n}) => ({\n  '&::before': {\n    content: 'counter(item) \".\"',\n    // Add numbers\n    counterIncrement: 'item',\n    // Increment numbers automatically\n    marginRight: theme.spacing(2),\n    fontWeight: 'bold'\n  }\n}));\n_c = NumberedListItem;\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        margin: 20,\n        padding: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        gutterBottom: true,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            gutterBottom: true,\n            children: \"Simple Omelette Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"An easy and quick dish, perfect for one meal. This classic omelette combines beaten eggs cooked to perfection, optionally filled with your choice of cheese, vegetables, or meats.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            backgroundColor: pink[50],\n            borderRadius: 2,\n            padding: 2,\n            margin: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Preparation Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: \"Total: Approximately 10 minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              children: \"Preparation: 5 minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              children: \"Cooking: 5 minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [\"2-3 large eggs\", \"Salt to taste\", \"Pepper to taste\", \"1 tablespoon of butter or oil\", \"Optional fillings: cheese, diced vegetables, cooked meats, herbs\"].map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: [/*#__PURE__*/_jsxDEV(CircleIcon, {\n                  fontSize: \"small\",\n                  sx: {\n                    color: pink[300]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              counterReset: 'item'\n            },\n            children: [\"Beat the eggs: In a bowl, beat the eggs with a pinch of salt and pepper until they are well mixed. You can add a tablespoon of water or milk for a fluffier texture.\", \"Heat the pan: Place a non-stick frying pan over medium heat and butter or oil.\", \"Cook the omelette: Once the butter is melted and bubbling, pour in the eggs. Tilt the pan to ensure the eggs evenly coat the surface.\", \"Fold and serve: As the omelette continues to cook, carefully lift one edge and fold it over the fillings. Let it cook for another minute, then slide into the plate.\", \"Enjoy: Serve hot, with additional salt and pepper if needed.\"].map((step, index) => /*#__PURE__*/_jsxDEV(NumberedListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: step\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Nutrition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"The table below shows nutritional values per serving without the additional fillings.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c2 = Header;\nexport default Header;\nvar _c, _c2;\n$RefreshReg$(_c, \"NumberedListItem\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["Card","CardContent","Divider","Toolbar","Typography","List","ListItem","ListItemText","ListItemIcon","pink","CircleIcon","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","NumberedListItem","theme","content","counterIncrement","marginRight","spacing","fontWeight","_c","Header","children","sx","margin","padding","gutterBottom","variant","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","borderRadius","map","item","index","fontSize","color","primary","counterReset","step","_c2","$RefreshReg$"],"sources":["D:/Omelete MUI/omelettemui/src/components/header.js"],"sourcesContent":["import { Card, CardContent, Divider, Toolbar, Typography } from \"@mui/material\";\r\nimport { List, ListItem, ListItemText, ListItemIcon } from \"@mui/material\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport CircleIcon from '@mui/icons-material/Circle'; // Bullet icon\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst NumberedListItem = styled(ListItem)(({ theme }) => ({\r\n    '&::before': {\r\n        content: 'counter(item) \".\"', // Add numbers\r\n        counterIncrement: 'item',     // Increment numbers automatically\r\n        marginRight: theme.spacing(2),\r\n        fontWeight: 'bold',\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <Toolbar sx={{ margin: 20, padding: 30 }}>\r\n                <Card gutterBottom>\r\n                    <CardContent>\r\n                        <Typography variant=\"h3\" gutterBottom>Simple Omelette Recipe</Typography>\r\n                        <Typography gutterBottom>\r\n                            An easy and quick dish, perfect for one meal. This classic omelette combines beaten eggs cooked to perfection, optionally filled with your choice of cheese, vegetables, or meats.\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                    {/* Preparation Time */}\r\n                    <CardContent sx={{ backgroundColor: pink[50], borderRadius: 2, padding: 2, margin: 5 }}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            Preparation Time\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem>Total: Approximately 10 minutes</ListItem>\r\n                            <ListItem>Preparation: 5 minutes</ListItem>\r\n                            <ListItem>Cooking: 5 minutes</ListItem>\r\n                        </List>\r\n                    </CardContent>\r\n\r\n                    {/* Ingredients with Bullets */}\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" gutterBottom>Ingredients</Typography>\r\n                        <List>\r\n                            {[\"2-3 large eggs\", \"Salt to taste\", \"Pepper to taste\", \"1 tablespoon of butter or oil\", \"Optional fillings: cheese, diced vegetables, cooked meats, herbs\"].map((item, index) => (\r\n                                <ListItem key={index}>\r\n                                    <ListItemIcon>\r\n                                        <CircleIcon fontSize=\"small\" sx={{ color: pink[300] }} /> {/* Bullet icon */}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={item} />\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </CardContent>\r\n                    <Divider />\r\n\r\n                    {/* Instructions with Numbers */}\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" gutterBottom>Instructions</Typography>\r\n                        <List sx={{ counterReset: 'item' }}>\r\n                            {[\r\n                                \"Beat the eggs: In a bowl, beat the eggs with a pinch of salt and pepper until they are well mixed. You can add a tablespoon of water or milk for a fluffier texture.\",\r\n                                \"Heat the pan: Place a non-stick frying pan over medium heat and butter or oil.\",\r\n                                \"Cook the omelette: Once the butter is melted and bubbling, pour in the eggs. Tilt the pan to ensure the eggs evenly coat the surface.\",\r\n                                \"Fold and serve: As the omelette continues to cook, carefully lift one edge and fold it over the fillings. Let it cook for another minute, then slide into the plate.\",\r\n                                \"Enjoy: Serve hot, with additional salt and pepper if needed.\"\r\n                            ].map((step, index) => (\r\n                                <NumberedListItem key={index}>\r\n                                    <ListItemText primary={step} />\r\n                                </NumberedListItem>\r\n                            ))}\r\n                        </List>\r\n                    </CardContent>\r\n\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" gutterBottom>Nutrition</Typography>\r\n                        <Typography>The table below shows nutritional values per serving without the additional fillings.</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Toolbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}